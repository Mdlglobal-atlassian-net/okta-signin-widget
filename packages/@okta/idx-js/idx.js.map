{"version":3,"sources":["webpack://idx/webpack/universalModuleDefinition","webpack://idx/webpack/bootstrap","webpack://idx/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://idx/./src/actionParser.js","webpack://idx/./src/generateIdxAction.js","webpack://idx/./src/idxResponseParser.js","webpack://idx/./src/index.js","webpack://idx/./src/introspect.js","webpack://idx/./src/makeIdxState.js","webpack://idx/./src/remediationParser.js"],"names":["fieldIsAutoSent","field","visible","value","divideSingleActionParams","action","neededParamsForAction","existingParamsForAction","name","push","divideActionParamsByAutoStatus","actionList","Array","isArray","neededParams","existingParams","generateDirectFetch","actionDefinition","target","href","params","fetch","method","headers","accepts","body","JSON","stringify","then","response","ok","json","err","Promise","reject","idxResponse","makeIdxState","generatePollingFetch","generateIdxAction","generator","refresh","SKIP_FIELDS","Object","fromEntries","map","parseNonRemediations","actions","context","keys","filter","forEach","fieldIsObject","rel","fieldValue","type","info","entries","subField","parseIdxResponse","remediations","generateRemediationFunctions","remediation","start","domain","stateHandle","error","introspect","details","idxState","stateToken","neededToProceed","proceed","remediationChoice","paramsFromUser","rawIdxState","remediationValue"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD,SAAS;AACT;AACA,SAAS;AACT,8EAA8E;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,qBAAqB;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,0BAA0B,eAAe;AACxE;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC,GAAG;AACJ,CAAC;AACD;AACA;AACA;AACA,qDAAqD,MAAM;AAC3D;AACA;AACA;AACA;;;;;;;;;;;;;AChiBA;AAAA;AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,KAAV,EAAkB;AACxC,MAAI,CAACA,KAAK,CAACC,OAAP,IAAkBD,KAAK,CAACE,KAA5B,EAAmC;AACjC,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CALD;;AAOA,IAAMC,wBAAwB,GAAG,SAASA,wBAAT,CAAmCC,MAAnC,EAA4C;AAC3E,MAAMC,qBAAqB,GAAG,EAA9B;AACA,MAAMC,uBAAuB,GAAG,EAAhC;AAF2E;AAAA;AAAA;;AAAA;AAI3E,yBAAmBF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","file":"idx.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"idx\"] = factory();\n\telse\n\t\troot[\"idx\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","var __self__ = (function (root) {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = root.DOMException\n}\nF.prototype = root;\nreturn new F();\n})(typeof self !== 'undefined' ? self : this);\n(function(self) {\n\nvar irrelevant = (function (exports) {\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  return exports;\n\n}({}));\n})(__self__);\ndelete __self__.fetch.polyfill\nexports = __self__.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = __self__.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = __self__.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = __self__.Headers\nexports.Request = __self__.Request\nexports.Response = __self__.Response\nmodule.exports = exports\n","const fieldIsAutoSent = function( field ) {\n  if (!field.visible && field.value) {\n    return true;\n  }\n  return false;\n};\n\nconst divideSingleActionParams = function divideSingleActionParams( action ) {\n  const neededParamsForAction = [];\n  const existingParamsForAction = {};\n\n  for ( let field of action.value ) {\n    if ( fieldIsAutoSent( field ) ) {\n      existingParamsForAction[field.name] = field.value ?? '';\n    } else {\n      neededParamsForAction.push(field);\n    }\n  }\n\n  return { neededParamsForAction, existingParamsForAction };\n};\n\nexport const divideActionParamsByAutoStatus = function divideActionParamsByAutoStatus( actionList ) {\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = {};\n  const existingParams = {};\n\n  for ( let action of actionList ) {\n    const { neededParamsForAction, existingParamsForAction } = divideSingleActionParams(action);\n    neededParams[action.name] = neededParamsForAction;\n    existingParams[action.name] = existingParamsForAction;\n  }\n\n  return { neededParams, existingParams };\n};\n\n","import fetch from 'cross-fetch';\nimport { divideActionParamsByAutoStatus } from './actionParser';\nimport makeIdxState from './makeIdxState';\n\nconst generateDirectFetch = function generateDirectFetch( actionDefinition, existingParams = {} ) {\n  const target = actionDefinition.href;\n  return async function(params) {\n    return fetch(target, {\n      method: actionDefinition.method,\n      headers: {\n        'content-type': actionDefinition.accepts,\n      },\n      body: JSON.stringify({ ...params, ...existingParams })\n    })\n      .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n      .then( idxResponse => makeIdxState(idxResponse) );\n  };\n};\n\nconst generatePollingFetch = function generatePollingFetch( actionDefinition, existingParams = {} ) {\n  // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n  const target = actionDefinition.href;\n  return async function(params) {\n    return fetch(target, {\n      method: actionDefinition.method,\n      headers: {\n        'content-type': actionDefinition.accepts,\n      },\n      body: JSON.stringify({ ...params, ...existingParams })\n    })\n      .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n      .then( idxResponse => makeIdxState(idxResponse) );\n  };\n};\n\nconst generateIdxAction = function generateIdxAction( actionDefinition ) {\n  const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const { neededParams, existingParams } = divideActionParamsByAutoStatus( actionDefinition );\n\n  const action = generator( actionDefinition, existingParams[actionDefinition.name] );\n  action.neededParams = neededParams[actionDefinition.name];\n  return action;\n};\n\nexport default generateIdxAction;\n","import { generateRemediationFunctions } from './remediationParser';\nimport generateIdxAction from './generateIdxAction';\n\nconst SKIP_FIELDS = Object.fromEntries([\n  'remediation', // remediations are put into proceed/neededToProceed\n  'context', // the API response of 'context' isn't externally useful.  We ignore it and put all non-action (contextual) info into idxState.context\n].map( (field) => [ field, !!'skip this field' ] ));\n\nexport const parseNonRemediations = function parseNonRemediations( idxResponse ) {\n  const actions = {};\n  const context = {};\n\n  Object.keys(idxResponse).filter( field => !SKIP_FIELDS[field]).forEach( field => {\n    const fieldIsObject = typeof idxResponse[field] === 'object' && !!idxResponse[field];\n\n    if ( !fieldIsObject ) {\n      // simple fields are contextual info\n      context[field] = idxResponse[field];\n      return;\n    }\n\n    if ( idxResponse[field].rel ) {\n      // top level actions\n      actions[idxResponse[field].name] = generateIdxAction(idxResponse[field]);\n      return;\n    }\n\n    const { value: fieldValue, type, ...info} = idxResponse[field];\n    context[field] = { type, ...info}; // add the non-action parts as context\n\n    if ( type !== 'object' ) {\n      // only object values hold actions\n      context[field].value = fieldValue;\n      return;\n    }\n\n    // We are an object field containing an object value\n    context[field].value = {};\n    Object.entries(fieldValue).forEach( ([subField, value]) => {\n      if (value.rel) { // is [field].value[subField] an action?\n        // add any \"action\" value subfields to actions\n        actions[`${field}-${subField.name || subField}`] = generateIdxAction(value);\n      } else {\n        // add non-action value subfields to context\n        context[field].value[subField] = value;\n      }\n    });\n  });\n\n  return { context, actions };\n};\n\nexport const parseIdxResponse = function parseIdxResponse( idxResponse ) {\n\n  const remediations = generateRemediationFunctions( idxResponse.remediation?.value || [] );\n  const { context, actions } = parseNonRemediations( idxResponse );\n\n  return {\n    remediations,\n    context,\n    actions,\n  };\n};\n","import introspect from './introspect';\nimport makeIdxState from './makeIdxState';\n\nconst start = async function start({ domain, stateHandle }) {\n  if ( !stateHandle ) {\n    return Promise.reject({ error: 'stateHandle is required' });\n  }\n\n  if ( !domain ) {\n    return Promise.reject({ error: 'domain is required' });\n  }\n\n  const idxResponse = await introspect({ domain, stateHandle })\n    .catch( err => Promise.reject({ error: 'introspect call failed', details: err }) );\n  const idxState = makeIdxState( idxResponse );\n  return idxState;\n};\n\nexport default {\n  start,\n};\n","import fetch from 'cross-fetch';\n\nconst introspect = async function introspect({ domain, stateHandle }) {\n  const target = `${domain}/idp/idx/introspect`;\n  return fetch(target, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify({ stateToken: stateHandle })\n  })\n    .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) );\n};\n\nexport default introspect;\n","import { parseIdxResponse } from './idxResponseParser';\n\nconst makeIdxState = function makeIdxState( idxResponse ) {\n\n  const { remediations, context, actions } = parseIdxResponse( idxResponse );\n\n  const neededToProceed = {};\n  Object.entries(remediations).forEach( ([name, action]) => {\n    neededToProceed[name] = action.neededParams;\n  });\n\n  const proceed = async function( remediationChoice, paramsFromUser = {} ) {\n    if ( !remediations[remediationChoice] ) {\n      return Promise.reject(`Unknown remediation choice: [${remediationChoice}]`);\n    }\n\n    return remediations[remediationChoice](paramsFromUser);\n  };\n\n  return {\n    proceed,\n    neededToProceed,\n    actions,\n    context,\n    rawIdxState: idxResponse,\n  };\n};\n\nexport default makeIdxState;\n","import generateIdxAction from './generateIdxAction';\n\nexport const generateRemediationFunctions = function generateRemediationFunctions( remediationValue ) {\n\n  return Object.fromEntries( remediationValue.map( remediation => {\n    return [\n      remediation.name,\n      generateIdxAction(remediation),\n    ];\n  }) );\n};\n"],"sourceRoot":""}
